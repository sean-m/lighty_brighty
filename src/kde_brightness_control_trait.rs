//! # DBus interface proxy for: `org.kde.Solid.PowerManagement.Actions.BrightnessControl`
//!
//! This code was generated by `zbus-xmlgen` `2.0.1` from DBus introspection data.
//! Source: `Interface '/org/kde/Solid/PowerManagement/Actions/BrightnessControl' from service 'org.kde.Solid.PowerManagement' on session bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!
//! This DBus object implements
//! [standard DBus interfaces](https://dbus.freedesktop.org/doc/dbus-specification.html),
//! (`org.freedesktop.DBus.*`) for which the following zbus proxies can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! â€¦consequently `zbus-xmlgen` did not generate code for the above interfaces.

use zbus::dbus_proxy;

#[dbus_proxy(
    default_service = "org.freedesktop.PowerManagement",
    interface = "org.kde.Solid.PowerManagement.Actions.BrightnessControl",
    default_path = "/org/kde/Solid/PowerManagement/Actions/BrightnessControl"
)]
trait BrightnessControl {
    /// brightness method
    #[dbus_proxy(name="brightness")]
    fn brightness(&self) -> zbus::Result<i32>;

    /// brightnessMax method
    #[dbus_proxy(name="brightnessMax")]
    fn brightness_max(&self) -> zbus::Result<i32>;

    /// brightnessSteps method
    #[dbus_proxy(name="brightnessSteps")]
    fn brightness_steps(&self) -> zbus::Result<i32>;

    /// setBrightness method
    #[dbus_proxy(name="setBrightness")]
    fn set_brightness(&self, arg_1: i32) -> zbus::Result<()>;

    /// setBrightnessSilent method
    #[dbus_proxy(name="setBrightnessSilent")]
    fn set_brightness_silent(&self, arg_1: i32) -> zbus::Result<()>;

    /// brightnessChanged signal
    #[dbus_proxy(signal, name="brightnessChanged")]
    fn brightness_changed(&self, arg_1: i32) -> zbus::Result<()>;

    /// brightnessMaxChanged signal
    #[dbus_proxy(signal, name="brightnessMaxChanged")]
    fn brightness_max_changed(&self, arg_1: i32) -> zbus::Result<()>;
}
